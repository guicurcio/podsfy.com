// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// 1
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 2
generator client {
  provider = "prisma-client-js"
}

// 3
model Podcast {
  id                      Int              @id @default(autoincrement())
  uid                     String?          @default(uuid())
  title                   String
  createdAt               DateTime         @default(now())
  updatedAt               DateTime         @default(now()) @map(name: "updated_at")
  description             String
  url                     String
  slug                    String           @unique
  cover                   String           @default("")
  host                    String           @default("")
  podcastHostId           String?
  podcastHost             Person?          @relation(fields: [podcastHostId], references: [id])
  episodes                Episode[]
  backgroundCoverImage    String?
  tags                    String?
  genre                   String?
  rating                  Int?
  similarPodcasts         Podcast[]        @relation("similarPodcasts")
  similarPodcastsRelation Podcast[]        @relation("similarPodcasts")
  reviews                 Review[]
  streamingAt             StreamingSites[]
  lastUpdate              Int?
  isItExplicit            Boolean?
  isItBlocked             Boolean?
  hasNotBeenUpdating      Boolean?
  outsideImageUrl         String?
  language                String?
  amountOfEpisodes        Int?
  popularity              Int?
  priority                Int?
  podcastCreatedOn        DateTime?
  frequencyOfUpdates      Int?

  @@index([slug])
}

model Person {
  id            String    @id @default(cuid())
  name          String?
  email         String?
  emailVerified DateTime?
  image         String?
  podcast       Podcast[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  guestAt       Episode[]
  slug          String?   @unique
  otherNames    String?

  @@index([slug])
}

model Episode {
  id                  Int       @id @default(autoincrement())
  title               String?
  description         String?
  publishedAt         DateTime?
  url                 String?
  podcastId           Int?
  podcast             Podcast?  @relation(fields: [podcastId], references: [id])
  episodeNumber       Int?
  bestEpisode         Boolean?
  featuredEpisode     Boolean?
  mostStreamedEpisode Boolean?
  episodeCoverImage   String?
  episodeGuests       Person[]
}

model StreamingSites {
  id          Int       @id @default(autoincrement())
  title       String?
  description String?
  publishedAt DateTime?
  url         String?
  podcasts    Podcast[]
  hits        String?
}

model Review {
  id        Int      @id @default(autoincrement())
  review    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  podcastId Int?
  podcast   Podcast? @relation(fields: [podcastId], references: [id])
}
